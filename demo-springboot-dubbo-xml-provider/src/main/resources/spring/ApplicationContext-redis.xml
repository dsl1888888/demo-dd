<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.fuyin.lima"/>


<!--    &lt;!&ndash; 控制一个pool可以分配多少个jedis实例 &ndash;&gt;-->
<!--    <property name="maxTotal" value="${redis.pool.maxActive}" />-->
<!--    &lt;!&ndash; 连接池中最多可空闲链接个数，这里取值20，表示即使没有用数据库链接依然保持20个空闲链接 &ndash;&gt;-->
<!--    <property name="maxIdle" value="${redis.pool.maxIdle}" />-->

<!--    &lt;!&ndash; 最大等待时间，当没有可用连接时，连接池等待链接被归还的最大时间ms，超过时间就抛出异常 &ndash;&gt;-->
<!--    <property name="maxWaitMillis" value="${redis.pool.maxWait}" />-->

<!--    &lt;!&ndash; 在获取连接的时候检查链接的有效性 &ndash;&gt;-->
<!--    <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />-->

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="15"/>
        <property name="maxTotal" value="30"/>
        <property name="minIdle" value="15"/>
<!--        <property name="maxTotal" value="${redis.maxTotal}"/>-->
<!--        <property name="maxTotal" value="${redis.maxTotal}"/>-->
<!--        <property name="maxIdle" value="${redis.maxIdle}"/>-->
<!--        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>-->
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.password}"/>
        <property name="timeout" value="9000"/>
        <property name="database" value="${redis.dbIndex}"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
    </bean>
</beans>